{"version":3,"sources":["../../src/lib/helpers.js"],"names":[],"mappings":";;AAAA,IAAM,KAAK,QAAQ,IAAR,CAAX;AACA,IAAM,OAAO,QAAQ,MAAR,CAAb;;AAEA,IAAM,YAAY,CACb,SADa,yBAEhB,QAAQ,QAAR,KAAqB,OAArB,GACO,QAAQ,GAAR,CAAY,WADnB,mBAEO,QAAQ,GAAR,CAAY,IAFnB,gBAFgB,EAKhB,iBALgB,EAMhB,GANgB,CAMZ;AAAA,SAAK,KAAK,SAAL,CAAe,CAAf,CAAL;AAAA,CANY,CAAlB;;AAQA,IAAM,uFAEJ,UAAU,IAAV,CAAe,IAAf,CAFI,OAAN;;AAKA,IAAM,cAAc,yBAApB;AACA,IAAM,aAAa,aAAnB;;AAEA,OAAO,OAAP,GAAiB;AACf,SADe,qBACG;AAAA,QAAT,GAAS,yDAAH,CAAG;;AAChB,WAAO,KAAK,KAAL,CAAW,CAAE,IAAI,IAAJ,EAAD,CAAa,OAAb,KAAyB,GAA1B,IAAiC,IAA5C,CAAP;AACD,GAHc;AAIf,WAJe,uBAIF;AACX,QAAM,SACJ,UACG,MADH,CACU,aAAK;AACX,UAAI;AACF,eAAO,GAAG,QAAH,CAAY,CAAZ,EAAe,MAAf,EAAP;AACD,OAFD,CAEE,OAAO,CAAP,EAAU;AACV,eAAO,KAAP;AACD;AACF,KAPH,EAQG,KARH,CAQS,CART,EAQY,CARZ,EASG,GATH,CASO;AAAA,aAAK,GAAG,YAAH,CAAgB,CAAhB,CAAL;AAAA,KATP,EAUG,GAVH,CAUO;AAAA,aAAK,KAAK,KAAL,CAAW,CAAX,CAAL;AAAA,KAVP,EAU2B,CAV3B,CADF;;AAaA,QAAI,CAAC,MAAL,EAAa;AACX,YAAM,IAAI,KAAJ,CAAU,WAAV,CAAN;AACD;AACD,WAAO,MAAP;AACD,GAtBc;AAuBf,iBAvBe,2BAuBE,MAvBF,EAuBU;AACvB,WACE,OAAO,CAAP,MAAc,GAAd,GACI,EAAC,SAAS,OAAO,MAAP,CAAc,CAAd,CAAV,EAA4B,MAAM,KAAlC,EADJ,GAEI,EAAC,SAAS,MAAV,EAAkB,MAAM,IAAxB,EAHN;AAKD,GA7Bc;AA8Bf,eA9Be,yBA8BA,GA9BA,EA8BK;AAClB,WAAO,CAAC,CAAC,IAAI,KAAJ,CAAU,IAAI,MAAJ,OAAe,UAAf,SAA6B,WAA7B,CAAV,CAAT;AACD,GAhCc;AAiCf,YAjCe,sBAiCH,GAjCG,EAiCE;AACf,QAAM,QAAQ,IAAI,KAAJ,CAAU,IAAI,MAAJ,OAAe,UAAf,UAA8B,WAA9B,CAAV,CAAd;AACA,QAAI,CAAC,KAAL,EAAY,OAAO,EAAP;AACZ,WAAO,MAAM,CAAN,CAAP;AACD;AArCc,CAAjB","file":"helpers.js","sourcesContent":["const fs = require('fs')\nconst path = require('path')\n\nconst locations = [\n  `${__dirname}/../../config.json`,\n  process.platform === 'win32'\n    ? `${process.env.USERPROFILE}/.rss-o-bot`\n    : `${process.env.HOME}/.rss-o-bot`,\n  '/etc/.rss-o-bot'\n].map(l => path.normalize(l))\n\nconst configError = `No config file found!\nRTFM and put one in one of these locations:\n${locations.join(', ')}\n`\n\nconst domainRegex = '([\\\\w\\\\d-]+\\\\.)+\\\\w{2,}'\nconst protoRegex = '\\\\w+:\\\\/\\\\/'\n\nmodule.exports = {\n  getTime (mod = 0) {\n    return Math.round(((new Date()).getTime() + mod) / 1000)\n  },\n  getConfig () {\n    const config =\n      locations\n        .filter(l => {\n          try {\n            return fs.statSync(l).isFile()\n          } catch (e) {\n            return false\n          }\n        })\n        .slice(0, 1)\n        .map(l => fs.readFileSync(l))\n        .map(c => JSON.parse(c))[0]\n\n    if (!config) {\n      throw new Error(configError)\n    }\n    return config\n  },\n  transformFilter (filter) {\n    return (\n      filter[0] === '!'\n        ? {keyword: filter.substr(1), kind: false}\n        : {keyword: filter, kind: true}\n    )\n  },\n  isAbsoluteUrl (str) {\n    return !!str.match(new RegExp(`^${protoRegex}|${domainRegex}`))\n  },\n  getBaseUrl (url) {\n    const match = url.match(new RegExp(`(${protoRegex})?${domainRegex}`))\n    if (!match) return ''\n    return match[0]\n  }\n}\n\n"]}