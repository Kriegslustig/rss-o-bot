{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;AAAA,IAAM,KAAK,QAAQ,IAAR,CAAX;;eAEoB,QAAQ,eAAR,C;;IAAb,S,YAAA,S;;AACP,IAAM,SAAS,WAAf;AACA,IAAM,SAAS,QAAQ,cAAR,EAAwB,MAAxB,CAAf;AACA,IAAM,OAAO,QAAQ,YAAR,CAAb;AACA,IAAM,YAAY,QAAQ,aAAR,CAAlB;;AAEA,GAAG,UAAH,CAAc,QAAd,CAAuB,OAAO,QAAP,GAAkB,IAAzC,EAA+C,SAA/C,CAAyD,CAAzD,EAA4D,OAA5D,CACE,UAAU,MAAV,EAAkB,OAAlB,CAA0B;AAAA,MAAE,QAAF,QAAE,QAAF;AAAA,MAAY,UAAZ,QAAY,UAAZ;AAAA,MAAwB,gBAAxB,QAAwB,gBAAxB;AAAA,SACxB,WACG,OADH,CACW,UAAC,KAAD;AAAA;;AAAA,WAAW,qBAAG,UAAH,EAAc,aAAd,0CACf,MAAM,GAAN,CAAU;AAAA,aACX,GAAG,UAAH,CAAc,WAAd,CAA0B,KAAK,UAAL,EAA1B,EACG,OADH,CACW;AAAA,eACP,KAAK,KAAK,GAAL,CAAS,KAAT,CAAL,EAAsB,QAAQ,GAAR,CAAY;AAAA,iBAAK,CAAC,EAAE,GAAF,CAAM,SAAN,CAAD,EAAmB,EAAE,GAAF,CAAM,MAAN,CAAnB,CAAL;AAAA,SAAZ,CAAtB,EACG,KADH,CACS,CADT,EAEG,OAFH,CAEW,UAAC,IAAD;AAAA,iBACP,iBAAiB,KAAK,GAAL,CAAS,IAAT,CAAjB,EAAiC,KAAK,UAAtC,EAAkD,GAAlD,CAAsD,IAAtD,CADO;AAAA,SAFX,EAKG,MALH,CAKU;AAAA,cAAE,UAAF,SAAE,UAAF;AAAA,iBACN,KAAK,GAAL,CAAS,YAAT,KAA0B,eAAe,KAAK,GAAL,CAAS,YAAT,CADnC;AAAA,SALV,EAQG,OARH,CAQW;AAAA,cAAG,IAAH,SAAG,IAAH;AAAA,cAAS,UAAT,SAAS,UAAT;AAAA,iBACP,OAAO,IAAP,EAAa,UAAb,CADO;AAAA,SARX,CADO;AAAA,OADX,CADW;AAAA,KAAV,CADe,EAAX;AAAA,GADX,CADwB;AAAA,CAA1B,EAqBC,KArBD,GAsBC,MAtBD,CAsBQ;AAAA,SAAM,KAAN;AAAA,CAtBR,CADF,EAyBG,SAzBH,CA0BI,QAAQ,GA1BZ,EA2BI,QAAQ,KA3BZ,EA4BI;AAAA,SAAM,QAAQ,GAAR,CAAY,UAAZ,CAAN;AAAA,CA5BJ","file":"index.js","sourcesContent":["const Rx = require('rx')\n\nconst {getConfig} = require('./lib/helpers')\nconst config = getConfig()\nconst notify = require('./lib/notify')(config)\nconst poll = require('./lib/poll')\nconst initStore = require('./lib/store')\n\nRx.Observable.interval(config.interval * 1000).startWith(0).flatMap(\n  initStore(config).flatMap(({getFeeds, insertFeed, updateLatestLink}) =>\n    getFeeds()\n      .flatMap((feeds) => Rx.Observable.combineLatest(\n        ...feeds.map(feed =>\n          Rx.Observable.fromPromise(feed.getFilters())\n            .flatMap(filters =>\n              poll(feed.get('url'), filters.map(f => [f.get('keyword'), f.get('kind')]))\n                .retry(2)\n                .flatMap((info) =>\n                  updateLatestLink(feed.get('id'), info.latestLink).map(info)\n                )\n                .filter(({latestLink}) =>\n                  feed.get('latestLink') && latestLink !== feed.get('latestLink')\n                )\n                .flatMap(({ blog, latestLink }) =>\n                  notify(blog, latestLink)\n                )\n            )\n        )\n      ))\n  )\n  .retry()\n  .filter(() => false)\n)\n  .subscribe(\n    console.log,\n    console.error,\n    () => console.log('Complete')\n  )\n\n"]}